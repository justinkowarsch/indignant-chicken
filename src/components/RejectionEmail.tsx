import React, { useState, useEffect } from 'react';

interface EmailData {
  id: number;
  from: string;
  subject: string;
  content: string;
  timestamp: string;
  priority?: 'low' | 'normal' | 'high';
  attachments?: Array<{ name: string; size: string; }>;
  autoReply?: boolean;
}

interface RejectionEmailProps {
  emailData: EmailData;
  onAcknowledge: () => void;
  delay?: number;
}

const predefinedEmails: EmailData[] = [
  {
    id: 1,
    from: "IdeaExcellence@company.com",
    subject: "RE: Your Recent Submission [IDEA_ID_NOT_FOUND]",
    content: `Dear [NAME_PARSING_ERROR],

Your submission has been flagged for non-compliance with Policy 47B-2 (attached for your convenience).

Specifically, Section [SECTION_UNDEFINED], Subsection [NULL], Paragraph [OVERFLOW_ERROR].

The following issues were identified:
â€¢ Insufficient buzzword density (minimum 15 per paragraph)
â€¢ Failure to cite at least 3 contradictory company policies
â€¢ Missing quarterly strategic alignment cross-reference matrix
â€¢ Idea shows too much practical benefit (reduces complexity score)

Please resubmit after careful review of the attached guidelines and consider consulting with your Innovation Liaison (currently unassigned).

Warmly,
The Innovation Excellence Team
"Your Ideas Matter!"â„¢

P.S. This email was automatically generated. Do not reply directly to this address as it will result in your idea being flagged for "excessive follow-up behavior."`,
    timestamp: "2 minutes ago",
    priority: "normal",
    attachments: [
      { name: "Policy-47B-2.pdf", size: "0 KB" },
      { name: "Compliance-Matrix-Template.xlsx", size: "47 MB" }
    ]
  },
  {
    id: 2,
    from: "no-reply@company.com",
    subject: "Automatic Response - Do Not Reply",
    content: `This is an automated message generated by the Bright Ideas Management Systemâ„¢.

CASE ID: BI-47291-ERROR
STATUS: REVIEW_COMPLETE
DISPOSITION: ARCHIVED

Your idea has been evaluated against Strategic Initiative #[CLASSIFIED] and found to conflict with the following undisclosed parameters:

â€¢ Operational Focus Area 12B (details restricted)
â€¢ Q4 Synergy Realignment Protocol (classified)
â€¢ Executive Vision Statement revision 14.7 (pending approval)
â€¢ Department Budget Optimization Framework (access denied)

RESOLUTION: No further action required on your part.

This thread is now closed. Any replies to this message will be automatically deleted and may result in your Innovation Privilege Score being reduced.

For questions about this decision, please consult the Innovation FAQ (currently under revision) or contact your supervisor (if available).

Thank you for your enthusiasm and continued dedication to our excellence framework!

---
Innovation Management System v12.4.7
"Streamlining Your Ideas Into Actionable Non-Actions"`,
    timestamp: "1 hour ago",
    priority: "low",
    autoReply: true
  },
  {
    id: 3,
    from: "CEO@company.com (via BulkMailer3000)",
    subject: "Congratulations! You've Been Selected! ðŸŽ‰",
    content: `Dear Innovation Champion,

Great news! You've been selected as this quarter's "Bright Thinker" recognition recipient!

Your submission demonstrated exactly the kind of out-of-the-box thinking that makes our company a leader in ideation management. While we can't implement your specific suggestion due to [LEGAL REVIEWED], your enthusiasm has not gone unnoticed!

As recognition for your innovative spirit, you've been enrolled in the following mandatory development opportunities:

ðŸ“š "Appropriate Innovation Channels" Workshop
   â€¢ Duration: 4 hours
   â€¢ Schedule: Saturday, 6:00 AM - 10:00 AM
   â€¢ Location: Conference Room B (bring your own coffee)
   â€¢ Instructor: Harold from Facilities (Innovation Adjacent)

ðŸ“‹ "Understanding Corporate Strategy Alignment" Seminar
   â€¢ Duration: 6 hours (with 15-minute lunch break)
   â€¢ Schedule: Sunday, 8:00 AM - 3:00 PM
   â€¢ Materials Fee: $127 (payroll deduction authorized)

ðŸŽ¯ Monthly Innovation Compliance Review
   â€¢ 30-minute monthly meetings for the next 18 months
   â€¢ Performance tracking and improvement metrics
   â€¢ Opportunity to share learnings with peers (attendance required)

Keep those ideas coming! Remember, every idea is valuable, even when it can't be implemented, considered, or acknowledged.

Innovatively yours,
[AUTO-SIGNATURE]
Chief Executive Officer
"Leading Through Excellence in Strategic Innovation Leadership"

---
This message was sent to 14,847 employees. You were BCCed to maintain the personal touch that makes our company culture so special.`,
    timestamp: "3 hours ago",
    priority: "high"
  }
];

export default function RejectionEmail({ emailData, onAcknowledge, delay = 0 }: RejectionEmailProps) {
  const [isVisible, setIsVisible] = useState(false);
  const [isRead, setIsRead] = useState(false);
  const [showConfirmation, setShowConfirmation] = useState(false);

  // Reset component state when email data changes
  useEffect(() => {
    setIsVisible(false);
    setIsRead(false);
    setShowConfirmation(false);

    const timer = setTimeout(() => {
      setIsVisible(true);
    }, delay);

    return () => clearTimeout(timer);
  }, [emailData.id, delay]);

  const handleAcknowledge = () => {
    setIsRead(true);
    setShowConfirmation(true);

    setTimeout(() => {
      onAcknowledge();
    }, 1500);
  };

  const getPriorityColor = (priority?: string) => {
    switch (priority) {
      case 'high': return 'border-red-500 bg-red-50 dark:bg-red-900/20';
      case 'low': return 'border-gray-400 bg-gray-50 dark:bg-gray-800';
      default: return 'border-blue-500 bg-blue-50 dark:bg-blue-900/20';
    }
  };

  if (!isVisible) {
    return (
      <div className="max-w-4xl mx-auto p-6">
        <div className="animate-pulse bg-gray-200 dark:bg-gray-700 rounded-lg h-64"></div>
        <p className="text-center text-gray-500 dark:text-gray-400 mt-4">
          Processing your submission...
        </p>
      </div>
    );
  }

  if (showConfirmation) {
    return (
      <div className="max-w-4xl mx-auto p-6 text-center">
        <div className="bg-green-100 dark:bg-green-900/20 border border-green-400 rounded-lg p-8">
          <div className="text-6xl mb-4">âœ…</div>
          <h3 className="text-xl font-semibold text-green-800 dark:text-green-400 mb-2">
            Email Acknowledged
          </h3>
          <p className="text-green-700 dark:text-green-300">
            Your acknowledgment has been logged. Preparing next communication...
          </p>
        </div>
      </div>
    );
  }

  return (
    <div className="max-w-4xl mx-auto p-6">
      <div className={`border-2 rounded-lg overflow-hidden transition-all duration-500 ${getPriorityColor(emailData.priority)}`}>
        {/* Email Header */}
        <div className="p-4 border-b border-gray-300 dark:border-gray-600 bg-white dark:bg-gray-800">
          <div className="flex items-center justify-between mb-2">
            <div className="flex items-center space-x-3">
              <div className={`w-3 h-3 rounded-full ${isRead ? 'bg-gray-400' : 'bg-blue-500'}`}></div>
              <span className="text-sm font-medium text-gray-900 dark:text-white">
                {emailData.from}
              </span>
              {emailData.autoReply && (
                <span className="px-2 py-1 bg-yellow-200 dark:bg-yellow-800 text-yellow-800 dark:text-yellow-200 text-xs rounded">
                  AUTO-REPLY
                </span>
              )}
              {emailData.priority === 'high' && (
                <span className="px-2 py-1 bg-red-200 dark:bg-red-800 text-red-800 dark:text-red-200 text-xs rounded">
                  HIGH PRIORITY
                </span>
              )}
            </div>
            <span className="text-sm text-gray-500 dark:text-gray-400">
              {emailData.timestamp}
            </span>
          </div>

          <h3 className="text-lg font-semibold text-gray-900 dark:text-white mb-2">
            {emailData.subject}
          </h3>

          {emailData.attachments && emailData.attachments.length > 0 && (
            <div className="flex items-center space-x-2 text-sm text-gray-600 dark:text-gray-400">
              <span>ðŸ“Ž</span>
              <span>{emailData.attachments.length} attachment(s):</span>
              {emailData.attachments.map((attachment, index) => (
                <span key={index} className="bg-gray-200 dark:bg-gray-700 px-2 py-1 rounded text-xs">
                  {attachment.name} ({attachment.size})
                </span>
              ))}
            </div>
          )}
        </div>

        {/* Email Content */}
        <div className="p-6 bg-white dark:bg-gray-800">
          <pre className="whitespace-pre-wrap text-sm text-gray-700 dark:text-gray-300 font-mono leading-relaxed">
            {emailData.content}
          </pre>
        </div>

        {/* Action Buttons */}
        <div className="p-4 bg-gray-50 dark:bg-gray-900 border-t border-gray-300 dark:border-gray-600">
          <div className="flex justify-center space-x-4">
            <button
              onClick={handleAcknowledge}
              className="px-6 py-2 bg-blue-600 hover:bg-blue-700 text-white rounded font-medium transition-colors"
            >
              Acknowledge & Continue
            </button>
            <button
              className="px-6 py-2 bg-gray-300 hover:bg-gray-400 text-gray-700 rounded font-medium transition-colors cursor-not-allowed opacity-50"
              disabled
              title="Reply function disabled per company policy"
            >
              Reply (Disabled)
            </button>
          </div>
          <p className="text-xs text-gray-500 dark:text-gray-400 text-center mt-2">
            Note: Replying to automated messages may result in Innovation Privilege Score reduction
          </p>
        </div>
      </div>
    </div>
  );
}

// Export the predefined emails for easy access
export { predefinedEmails };
export type { EmailData };